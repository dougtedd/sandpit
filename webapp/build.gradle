apply plugin: 'war'
apply plugin: 'jetty'


dependencies {
    providedCompile 'javax.servlet:javax.servlet-api:' + javaxServletVersion
    providedCompile 'javax.servlet.jsp.jstl:jstl-api:' + jstlApiVersion

    // dependency on the output jar of the common project
    compile project(':common')

    compile 'org.springframework:spring-webmvc:' + springVersion
    compile 'org.apache.tiles:tiles-jsp:' + tilesVersion
    compile 'org.springframework:spring-orm:' + springVersion

    compile 'org.hibernate:hibernate-validator:5.1.3.Final'
    compile 'org.hibernate:hibernate-entitymanager:4.3.7.Final'
    compile 'org.liquibase:liquibase-core:3.3.1'

    compile 'mysql:mysql-connector-java:5.1.6'

    testCompile 'org.springframework:spring-test:' + springVersion
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.eclipse.jetty:jetty-server:' + jettyVersion
    }
}

[jettyRun, jettyRunWar]*.with {
    httpPort = 8080
    stopPort = 8090

    // Use the following to configure connectors with more precision
//    def httpConnector = jettyRun.class.classLoader.loadClass('org.mortbay.jetty.nio.SelectChannelConnector').newInstance()
//    httpConnector.port = 8080
//    httpConnector.host = '10.0.1.1'
//    def httpsConnector = jettyRun.class.classLoader.loadClass('org.mortbay.jetty.security.SslSocketConnector').newInstance()
//    httpsConnector.port = 8443
//    httpsConnector.keystore = "keystore.jks"
//    httpsConnector.keyPassword = "keystorepwd"
//    httpsConnector.truststore = "cacerts"
//    httpsConnector.trustPassword = "cacertspwd"
//    connectors = [httpConnector]
}

task runJetty(dependsOn:jettyRun) {
    println("Jetty started and stopped")

}